#! /bin/bash
#
#
#
# chkconfig: 345 20 80
# description: Starts and stops the tomcat
#
# /etc/rc.d/init.d/tomcat
#

TOMCAT_PATH="/prj/tomcat/"

get_pid() {
    echo $(ps -ef | grep java | grep -v grep | grep "org.apache.catalina" | awk '{print $2}')
}

stop_loop() {
    for i in $(seq 1 $1)
    do
	PID=$(get_pid)
	if [[ "$PID" == "" ]]; then
		echo "Stopped"
		exit 0
	fi
	sleep 1
    done
}

show_log() {
   if [[ "$1" != "" ]]; then
      case $1 in
         catalina)
            echo "Showing log: $TOMCAT_PATH/logs/catalina.out"
            tail -f $TOMCAT_PATH"/logs/catalina.out"
         ;;      
         webportal)
            echo "Showing log: $TOMCAT_PATH/logs/webportal.log"
            tail -f $TOMCAT_PATH"/logs/webportal.log"
         ;;   
         scp)
            echo "Showing log: $TOMCAT_PATH/logs/webportal.log"
            tail -f $TOMCAT_PATH"/logs/scp/app.log"
         ;;
         sup)
            echo "Showing log: $TOMCAT_PATH/logs/webportal.log"
            tail -f $TOMCAT_PATH"/logs/sup/app.log"
         ;;         
         *)
            echo "Showing log: $TOMCAT_PATH/logs/webportal-$1.log"
            tail -f $TOMCAT_PATH"/logs/webportal-"$1".log"
         ;;
      esac     
   fi
}

case $1 in
    start)
	echo "Starting tomcat..."

	if [[ "$(get_pid)" != "" ]]; then
		echo "Tomcat already running"
		exit 1
        fi

	$TOMCAT_PATH"bin/startup.sh"

	sleep 3

	if [[ "$(get_pid)" == "" ]]; then
	    echo "Failed to start process"
	    exit 1
	fi

	echo "Started"

        show_log $2     
      
	exit 0
    ;;
    stop)
	echo "Stopping tomcat..."

	PID=$(get_pid)
	if [[ "$PID" == "" ]]; then
	    echo "Tomcat not running"
	    exit 0
	fi

	$TOMCAT_PATH"bin/catalina.sh" stop
	stop_loop 10

	echo "Shutdown failed, trying to kill ..."
	kill "$PID"
	stop_loop 10

	echo "Shutdown failed, trying to kill -9..."
	kill -9 "$PID"
	stop_loop 3

	echo "Could not stop JBoss process"
	exit 1
    ;;
    restart)
	${0} stop; ${0} start "$2"
    ;;
    status)
	PID=$(get_pid)
	if [[ "$PID" == "" ]]; then
	    echo "Not running"
	else
	    echo "Running: $PID"
	fi
    ;;
    log)
	show_log $2
    ;;
    *)
	echo "Usage: ${0} {start|stop|restart|status|log}"
    ;;
esac

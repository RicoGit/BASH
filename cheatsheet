
 http://habrahabr.ru/post/47163/


chmod +rx scriptname  # выдача прав на чтение/исполнение любому пользователю
chmod u+rx scriptname # выдача прав на чтение/исполнение только "владельцу" скрипта

	###BASH###

    break выход из цикла for, while или until
    continue выполнение следующей итерации цикла for, while или until
    echo вывод аргументов, разделенных пробелами, на стандартное устройство вывода
    exit выход из оболочки
    export отмечает аргументы как переменные для передачи в дочерние процессы в среде
    hash запоминает полные имена путей команд, указанных в качестве аргументов, чтобы не искать их при следующем обращении
    kill посылает сигнал завершения процессу
    pwd выводит текущий рабочий каталог
    read читает строку из ввода оболочки и использует ее для присвоения значений указанным переменным.\
    return заставляет функцию оболочки выйти с указанным значением
    shift перемещает позиционные параметры налево
    test вычисляет условное выражение
    times выводит имя пользователя и системное время, использованное оболочкой и ее потомками
    trap указывает команды, которые должны выполняться при получении оболочкой сигнала
    unset вызывает уничтожение переменных оболочки
    wait ждет выхода из дочернего процесса и сообщает выходное состояние.

    $DIRSTACK - содержимое вершины стека каталогов
    $EDITOR - текстовый редактор по умолчанию
    $EUID - Эффективный UID. Если вы использовали программу su для выполнения команд от другого пользователя, то эта переменная содержит UID этого пользователя, в то время как...
    $UID - ...содержит реальный идентификатор, который устанавливается только при логине.
    $FUNCNAME - имя текущей функции в скрипте.
    $GROUPS - массив групп к которым принадлежит текущий пользователь
    $HOME - домашний каталог пользователя
    $HOSTNAME - ваш hostname
    $HOSTTYPE - архитектура машины.
    $LC_CTYPE - внутренняя переменная, котороя определяет кодировку символов
    $OLDPWD - прежний рабочий каталог
    $OSTYPE - тип ОС
    $PATH - путь поиска программ
    $PPID - идентификатор родительского процесса
    $SECONDS - время работы скрипта(в сек.)
    $# - общее количество параметров переданных скрипту
    $* - все аргументы переданыне скрипту(выводятся в строку)
    $@ - тоже самое, что и предыдущий, но параметры выводятся в столбик
    $! - PID последнего запущенного в фоне процесса
    $$ - PID самого скрипта

    if [[ "$source" -eq "$dest" ]] # в ковычках указываем имена переменных для сравнения. -eq - логическое сравнение обозначающие "равны"
        -z # строка пуста
        -n # строка не пуста
        =, (==) # строки равны
        != # строки неравны
        -eq # равно
        -ne # неравно
        -lt,(< ) # меньше
        -le,(<=) # меньше или равно
        -gt,(>) #больше
        -ge,(>=) #больше или равно
        ! #отрицание логического выражения
        -a,(&&) #логическое «И»
        -o,(||) # логическое «ИЛИ»

    stdout — Стандартный вывод. Сюда попадает все что выводят программы
    stdin — Стандартный ввод. Это все что набирает юзер в консоли
    stderr — Стандартный вывод ошибок.*3.

	###TERMINAL COMMNANDS###

mtr [hostname] - для диагностики сети
sudo !! - выполнить предыдущую команду с правами супер пользователя (!! - выполнить предыдущую команду)
cd - - вернуться в предыдущую директорию 	
[space] [command] - если стоит пробел перед командой, она не попадет в ~/.bash_history
df - показывает свободное пространство на диске
pkill [application_name] - убить процесс по времени (pkill skype)
cal - показать календарь
nl - нумерует строки вывода
date - посмотреть время, дату (date -3 4 1986 - посмотреть март и соседние месяцы 1986)

man hier - описание иерархии файловой системы (для чего нужна каздая директория)
uptime - посмотреть время работы машины с последней перезагрузки
export [var]=[value] - задать значение переменной окружения
shutdown -h now - выход из линукс (poweroff - выключить питание)
reboot - перезагрузка системы


wget [url] - скачать файл в текущую папку
wget --convert-links -r [url] - скачать файл для автономной работы
